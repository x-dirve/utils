{"version":3,"file":"each.js","sources":["../../src/libs/each.ts"],"sourcesContent":["import { isFunction } from \"./isFunction\";\nimport { isObject } from \"./isObject\";\nimport { isArray } from \"./isArray\";\n\n/**\n * 通用遍历函数\n * @param  data    待遍历数据\n * @param  handler 处理函数\n * @param  context 作用域\n */\nexport function each(data: any[] | object, handler: Function, context?: object): void {\n    context = context || this;\n    var hasHandler = isFunction(handler);\n    if (isArray(data)) {\n        for (let i = 0; i < (data as any[]).length; i++) {\n            let re = true;\n            if (hasHandler) {\n                re = handler.call(context, data[i], i);\n            }\n            if (re === false) {\n                break;\n            }\n        }\n    } else if (isObject(data)) {\n        const keys = Object.keys(data);\n        for (let i = 0; i < keys.length; i++) {\n            let re = true;\n            if (hasHandler) {\n                re = handler.call(context, data[keys[i]], keys[i]);\n            }\n            if (re === false) {\n                break;\n            }\n        }\n    }\n}"],"names":["data","handler","context","this","hasHandler","isFunction","isArray","let","i","length","re","call","isObject","const","keys","Object"],"mappings":"mMAUqBA,EAAsBC,EAAmBC,GAC1DA,EAAUA,GAAWC,KACrB,IAAIC,EAAaC,aAAWJ,GAC5B,GAAIK,UAAQN,GACR,IAAKO,IAAIC,EAAI,EAAGA,EAAKR,EAAeS,OAAQD,IAAK,CAC7CD,IAAIG,GAAK,EAIT,GAHIN,IACAM,EAAKT,EAAQU,KAAKT,EAASF,EAAKQ,GAAIA,KAE7B,IAAPE,EACA,WAGL,GAAIE,WAASZ,GAEhB,IADAa,IAAMC,EAAOC,OAAOD,KAAKd,GAChBQ,EAAI,EAAGA,EAAIM,EAAKL,OAAQD,IAAK,CAClCD,IAAIG,GAAK,EAIT,GAHIN,IACAM,EAAKT,EAAQU,KAAKT,EAASF,EAAKc,EAAKN,IAAKM,EAAKN,MAExC,IAAPE,EACA"}