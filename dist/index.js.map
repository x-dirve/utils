{"version":3,"file":"index.js","sources":["../src/is.ts","../src/utils.ts"],"sourcesContent":["/**\n * 数据类型判断\n * @param  subject 待判断的数据\n * @param  type    数据类型名字\n * @return         判断结果\n */\nexport function is(subject: any, type: string): boolean {\n    return Object.prototype.toString.call(subject).substr(8, type.length).toLowerCase() === type\n}\n\n/**\n * 是否是数组\n * @param  subject 待判断的数据\n */\nexport function isArray(subject: any) {\n    return Array.isArray(subject);\n}\n\n/**\n * 是否是数组\n * @param  subject 待判断的数据\n */\nexport function isObject(subject: any) {\n    return is(subject, \"object\");\n}\n\n/**\n * 是否是字符串\n * @param  subject 待判断的数据\n */\nexport function isString(subject: any) {\n    return is(subject, \"string\");\n}\n\n/**\n * 是否是 null\n * @param  subject 待判断的数据\n */\nexport function isNull(subject: any) {\n    return is(subject, \"null\")\n}\n\n/**\n * 是否是数字\n * @param  subject 待判断的数据\n */\nexport function isNumber(subject: any) {\n    return !isNaN(subject) && is(subject, \"number\");\n}\n\n/**\n * 是否 undefined\n * @param  subject 待判断的数据\n */\nexport function isUndefined(subject: any) {\n    return is(subject, \"undefined\");\n}\n\n/**\n * 是否是函数\n * @param  subject 待判断的数据\n */\nexport function isFunction(subject: any) {\n    return is(subject, \"function\");\n}\n\n/**\n * 是否是布尔值\n * @param  subject 待判断的数据\n */\nexport function isBoolean(subject: any) {\n    return is(subject, \"boolean\");\n}\n\n/**\n * 是否是错误对象\n * @param subject 待判断数据\n */\nexport function isError(subject: any) {\n    return is(subject, \"error\");\n}\n\n/**\n * 是否是正则\n * @param subject 待判断数据\n */\nexport function isRegexp(subject: any) {\n    return is(subject, \"regexp\");\n}","import { isFunction, isString, isArray, isObject, isUndefined, isNumber, isNull } from \"./is\";\n\n/**\n * 带花括号标签检测正则\n * @type {RegExp}\n */\nconst labelReplaceExp: RegExp = /\\{(\\w+)\\}/g\nexport { labelReplaceExp }\n\n/**\n * 批量替换字符串中带花括号标签为指定数据\n * @param  tpl  待处理的字符串\n * @param  data 替换数据\n * @param  keep 是否保留未能解析的标签\n * @return      替换后端字符串\n * @example\n * ```tsx\n * labelReplace('{a}/{b}/c', {a: 1, b: 2}) // 1/2/c\n * labelReplace('{a}/{b}/c', {a: 1}, true) // 1/{b}/c\n * ```\n */\nexport function labelReplace<T>(tpl: string, data: T, keep: boolean = false): string {\n    return tpl.replace(labelReplaceExp, function (_, key) {\n        const re = isObject(data) ? data[key] : data\n        if (isUndefined(re) && keep) {\n            return _\n        }\n        return re\n    })\n}\n\nconst A_SLICE: Function = Array.prototype.slice\n\n/**\n * 是否是数组且长度大于0\n * @param  subject 待判断的数据\n */\nexport function isValidArray(subject: any): boolean {\n    return Array.isArray(subject) && subject.length > 0\n}\n\n/**\n * 伪数组转成数组\n * @param   args 伪数组对象\n * @return       转化后的数组\n */\nexport function toArray<T>(args: T[]): Array<T> {\n    return Array.prototype.slice.call(args)\n}\n\n/**\n * 通用遍历函数\n * @param  data    待遍历数据\n * @param  handler 处理函数\n * @param  context 作用域\n */\nexport function each<T>(data: T[] | object, handler: Function, context?: object): void {\n    context = context || this\n    var hasHandler = isFunction(handler)\n    if (isArray(data)) {\n        for (let i = 0; i < (data as T[]).length; i++) {\n            let re = true\n            if (hasHandler) {\n                re = handler.call(context, data[i], i)\n            }\n            if (re === false) {\n                break\n            }\n        }\n    } else if (isObject(data)) {\n        const keys = Object.keys(data)\n        for (let i = 0; i < keys.length; i++) {\n            let re = true\n            if (hasHandler) {\n                re = handler.call(context, data[keys[i]], keys[i])\n            }\n            if (re === false) {\n                break\n            }\n        }\n    }\n}\n\n/**\n * 大写字母匹配正则\n */\nconst UPPER_CASE_REGEXP: RegExp = /[A-Z]/g\n\n/**\n * 转化为蛇形命名\n * @param  str 待处理的字符串\n * @return     处理后的字符串\n */\nexport function toUnderlineName(str: string): string {\n    if (isString(str)) {\n        return str.replace(UPPER_CASE_REGEXP, (m, i) => `${i ? '_' : ''}${m.toLowerCase()}`)\n    }\n    return str\n}\n\n/**\n * 简单复制\n * @param  item 原始数据\n * @return      复制后的数据\n */\nexport function copy<T>(item: T): T {\n    return JSON.parse(JSON.stringify(item))\n}\n\n/**\n * 格式化数字, 自动补0前续\n * @param  number 要格式化的数字\n * @param  size   格式化后出来的数字位数\n * @return        格式化结果\n */\nexport function fix0(number, size: number): string {\n    number = number.toString()\n    while ((number).length < size) {\n        number = '0' + number\n    }\n    return number\n}\n\n/**\n * 数组随机分布\n * @param  arr  原始数组\n * @return      打乱后的数组\n */\nexport function shuffle<T>(arr: T[]): T[] {\n    for (let i = arr.length - 1; i >= 0; i--) {\n        const rIndex = Math.floor(Math.random() * (i + 1))\n        const item = arr[rIndex]\n        arr[rIndex] = arr[i]\n        arr[i] = item\n    }\n    return arr\n}\n\n/**\n * 获取包含指定范围内的随机数\n * @param  max 最大范围(包含)\n * @param  min 最小范围(包含，默认 0)\n * @return     随机数\n */\nexport function random(max: number, min: number): number {\n    if (min === undefined) {\n        min = 0\n    }\n    return Math.round(Math.random() * (max - min) + min)\n}\n\n/**\n * 序列化请求参数\n * @param  query 参数对象\n * @return       参数字符串\n */\nexport function serialize(query: object, encode: boolean = false): string {\n    return Object.keys(query)\n        .map(key => `${key}=${encode ? encodeURIComponent(query[key]) : query[key]}`)\n        .join('&');\n}\n\n/**\n * 对象扩展方法\n * @return 合并后的对象\n */\nexport function extend() {\n    var args: any[] = A_SLICE.call(arguments)\n    var dat = args.shift()\n    if (dat) {\n        if (args.length) {\n            while (args.length) {\n                const item = args.shift()\n                if (item) {\n                    each(item, function (val, key) {\n                        dat[key] = val\n                    })\n                }\n            }\n        }\n        return dat\n    }\n\n    return null\n}\n\n/**\n * 合并\n * @param target  合并基准对象\n * @param sources 后续合并对象\n */\nexport function merge(target: object, ...sources: any[]) {\n    if (!sources.length) return target\n    const source: any = sources.shift()\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                merge(target[key], source[key]);\n            } else {\n                Object.assign(\n                    target,\n                    {\n                        [key]: source[key]\n                    }\n                );\n            }\n        }\n    }\n    return merge(target, ...sources);\n}\n\n/**\n * 请求参数对象转成请求参数字符串\n * @param dat 请求参数\n */\nexport function queryString(dat: { [key: string]: any }): string {\n    let queryStr: string\n    if (dat) {\n        queryStr = Object.keys(dat)\n            .map(key => {\n                return `${key}=${encodeURIComponent(dat[key])}`\n            })\n            .join('&')\n    } else {\n        queryStr = ''\n    }\n    return queryStr\n}\n\n/**\n * 时间分割正则\n */\nconst date_regx = /[^\\d]+/;\n\n/**\n * 转换对象为JS Date对象\n * @param   date   <可选> 日期数据(时间戳, 字符串, Date对象, 空)\n * @param   offset 修正偏移的秒数\n * @return         返回JS Date对象 / NULL 日期格式错误\n */\nexport function toDate(date, offset?: number) {\n    let ts;\n    if (date instanceof Date) {\n        ts = date;\n    } else if (isNumber(date)) {\n        ts = new Date(date);\n    } else if (isNaN(+date)) {\n        if (isString(date)) {\n            date = date.split(date_regx);\n            if (date.length === 3) {\n                ts = new Date(+date[0], date[1] - 1, +date[2], 0, 0, 0, 0);\n                if (isNaN(+ts)) {\n                    ts = null;\n                }\n            }\n        } else {\n            return null;\n        }\n    }\n    if (!ts) {\n        if (!date) {\n            return null;\n        }\n        ts = new Date();\n        if (date > 5e8) {\n            // 时间戳\n            ts.setTime(date * 1000);\n        } else {\n            // 时间偏移(秒数)\n            ts.setTime(ts.getTime() + date * 1000);\n        }\n    }\n    if (!isNaN(Number(offset))) {\n        ts.setTime(ts.getTime() + (offset as number) * 1000);\n    }\n    return ts;\n}\n\n/**\n * 日期格式化格式匹配正则\n */\nconst format_exp = /[YymndjNwaAghGHisT]/g;\n\n/**\n * 按照指定格式将日期对象或时间戳转化为日期字符串\n * @param  date   日期对象或时间戳\n * @param  format 日期格式\n * @param  offset 修正偏移的秒数\n * @return        日期\n */\nexport function date(date, format?: string, offset?: number): string {\n    format = format || \"Y-m-d H:i:s\";\n    let timestamp = toDate(date, offset);\n    if (timestamp === null) {\n        timestamp = new Date();\n    }\n    return format.replace(format_exp, function format_callback(tag: string) {\n        switch (tag) {\n            case \"Y\": return timestamp.getFullYear();\n            case \"y\": return timestamp.getFullYear() % 100;\n            case \"m\": return fix0(timestamp.getMonth() + 1, 2);\n            case \"n\": return timestamp.getMonth() + 1;\n            case \"d\": return fix0(timestamp.getDate(), 2);\n            case \"j\": return timestamp.getDate();\n            case \"N\": return timestamp.getDay();\n            case \"w\": return timestamp.getDay() % 7;\n            case \"a\": return timestamp.getHours() < 12 ? \"am\" : \"pm\";\n            case \"A\": return timestamp.getHours() < 12 ? \"AM\" : \"PM\";\n            case \"g\": return timestamp.getHours() % 12 + 1;\n            case \"h\": return fix0(timestamp.getHours() % 12 + 1, 2);\n            case \"G\": return timestamp.getHours();\n            case \"H\": return fix0(timestamp.getHours(), 2);\n            case \"i\": return fix0(timestamp.getMinutes(), 2);\n            case \"s\": return fix0(timestamp.getSeconds(), 2);\n            case \"T\": return Math.round(timestamp.getTime() / 1000);\n        }\n        return tag;\n    });\n}\n\n/**\n * 按位数格式化数字\n * @param  val       要格式化的数字\n * @param  separator 分割符\n * @param  size      分割位数间隔\n * @return           格式化完的字符串\n */\nexport function numberFormat(val:any, separator:string, size:number) {\n    if (!isNumber(val)) {\n        return \"0\";\n    }\n    if (isUndefined(separator) || isNull(separator)) {\n        separator = \",\";\n    }\n    if (!isNumber(size)) {\n        size = 3;\n    }\n    var last = size;\n\n    val = val.toString();\n    var pos = val.indexOf(\".\");\n    var res = \"\";\n    if (pos === -1) {\n        pos = val.length;\n    } else {\n        res = val.substr(pos);\n    }\n\n    if (val.charAt(0) === \"-\") {\n        last++;\n    }\n    while (pos > last) {\n        pos -= size;\n        res = separator + val.substr(pos, size) + res;\n    }\n    if (pos) {\n        res = val.substr(0, pos) + res;\n    }\n    return res;\n}"],"names":["const","let","i","re"],"mappings":"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"}